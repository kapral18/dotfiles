#!/usr/bin/env bash

# Exit immediately if a command exits with a non-zero status.
set -e
# Treat unset variables as an error when substituting.
set -u
# Pipelines return the exit status of the last command to exit non-zero.
set -o pipefail
# Optional: Enable tracing for debugging (remove or comment out for normal use)
# set -x

# ==============================================
# .osx.core - macOS Customization Script
# ==============================================
echo "Starting macOS customization..."

# ==============================================
# Kill affected applications/services
# ==============================================
function killallApps() {
  echo "Restarting affected applications/services..."
  # Use killall which sends SIGTERM. Most apps handle this well for prefs reload.
  # Adding '|| true' prevents script exit if an app isn't running.
  killall "Finder" >/dev/null 2>&1 || true # Finder restarts automatically
  killall "SystemUIServer" >/dev/null 2>&1 || true
  killall "Dock" >/dev/null 2>&1 || true

  appsToKill=(
    "Activity Monitor"
    "System Settings" # Changed from System Preferences for Ventura+
    "App Store"
    # Add other apps if their settings were changed by this script
    "Photos" # If ImageCapture settings were changed
  )

  for app in "${appsToKill[@]}"; do
    # Check if the app is running before trying to kill
    if pgrep -xq -- "${app}"; then
      killall "${app}" >/dev/null 2>&1 && echo "Quit ${app}"
    fi
  done

  echo "--------------------------------------------------------------------"
  echo "Done applying settings."
  echo "Note: Some changes may require a logout/restart to take full effect."
  echo "--------------------------------------------------------------------"
}

# Call killallApps at the end, after all settings are applied.

# ==============================================
# Files and folders Visibility
# ==============================================
echo "Setting folder visibility..."
# Show the ~/Library directory
sudo chflags nohidden "${HOME}/Library" || echo "WARN: Failed to unhide ~/Library"
# Show the '/Volumes' folder
sudo chflags nohidden "/Volumes" || echo "WARN: Failed to unhide /Volumes"

# ==============================================
# NSGlobalDomain settings (Apply System-Wide)
# ==============================================
echo "Setting NSGlobalDomain preferences..."

# "Application Downloaded from Internet" popup will not display
defaults write com.apple.LaunchServices LSQuarantine -bool "false"

# --- Interface ---
# Interface style: Dark (Options: Light, Dark, Auto)
defaults write -g AppleInterfaceStyle -string "Dark"
defaults delete -g AppleInterfaceStyleSwitchesAutomatically >/dev/null 2>&1 || true # Ensure Auto mode is off if setting Dark/Light

# Don't automatically hide and show the menu bar
defaults write -g _HIHideMenuBar -bool false

# Don't allow wallpaper tinting in windows (Improves contrast)
defaults write -g AppleReduceDesktopTinting -bool true

# --- Language & Region ---
# Consider commenting these out if you don't want to force a specific locale
defaults write -g AppleLanguages -array "en-US" "nb-NO"    # Example: English primary, Norwegian BokmÃ¥l secondary
defaults write -g AppleLocale -string "en_US@currency=EUR" # Example: English (United States) with Euro currency
defaults write -g AppleMeasurementUnits -string "Centimeters"
defaults write -g AppleMetricUnits -bool true
defaults write -g AppleTemperatureUnit -string "Celsius"
# First day of week (1=Sun, 2=Mon, ..., 7=Sat)
defaults write -g AppleFirstWeekday -dict gregorian -int 2 # Set to Monday
# 24-Hour Time
defaults write -g AppleICUForce12HourTime -bool false # Use 24-hour clock

# --- Text & Input ---
# Live Text (Select text in images)
defaults write -g AppleLiveTextEnabled -bool true

# Enable key repeat (vs. showing character accents)
defaults write -g ApplePressAndHoldEnabled -bool false

# Set keyboard repeat rate (lower values are faster)
# Note: 1/10 is VERY fast. Adjust to taste (e.g., 2/15)
defaults write -g KeyRepeat -int 1
defaults write -g InitialKeyRepeat -int 10

# Disable automatic spelling correction
defaults write -g NSAutomaticSpellingCorrectionEnabled -bool false
# defaults write -g WebAutomaticSpellingCorrectionEnabled -bool false # Often controlled by browser prefs

# Automatically identify language for spelling correction
defaults write -g NSSpellCheckerAutomaticallyIdentifiesLanguages -bool true

# Disable automatic capitalization
defaults write -g NSAutomaticCapitalizationEnabled -bool false

# Disable double-space to period
defaults write -g NSAutomaticPeriodSubstitutionEnabled -bool false

# Disable smart quotes and dashes
defaults write -g NSAutomaticDashSubstitutionEnabled -bool false
defaults write -g NSAutomaticQuoteSubstitutionEnabled -bool false

# Enable text completion (Tab completion in text fields)
defaults write -g NSAutomaticTextCompletionEnabled -bool true

# --- Window Behavior ---
# Double-click a window's title bar action (Zoom, Minimize, None)
defaults write -g AppleActionOnDoubleClick -string "Maximize" # 'Maximize' is Zoom on macOS
# defaults write -g AppleMiniaturizeOnDoubleClick -bool false # Ensure double-click doesn't minimize if set to Maximize

# Use smooth scrolling
defaults write -g AppleScrollAnimationEnabled -bool true

# Don't restore windows when quitting or re-opening apps
defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false # For System Settings/Prefs itself
defaults write -g PMPrintingExpandedStateForPrint -bool true                    # Expand print dialog by default
defaults write -g NSNavPanelExpandedStateForSaveMode -bool true                 # Expand save panel by default
defaults write -g NSNavPanelExpandedStateForSaveMode2 -bool true

# Don't reopen windows when logging back in
defaults write com.apple.loginwindow LoginwindowLaunchesRelaunchApps -bool false
# Note: `com.apple.finder RestoreWindowState` seems less effective now, rely on Loginwindow setting.

# Disable window opening/closing animations (Subtle speedup)
defaults write -g NSAutomaticWindowAnimationsEnabled -bool false

# Set window resize speed (Lower is faster)
defaults write -g NSWindowResizeTime -float 0.001

# Sidebar icon size: Small (1), Medium (2), Large (3)
defaults write -g NSTableViewDefaultSizeMode -int 1

# Show scroll bars: Always, Automatic, WhenScrolling
defaults write -g AppleShowScrollBars -string "Automatic"

# Click in the scroll bar to: Jump to the next page (0) or Jump to here (1)
defaults write -g AppleScrollerPagingBehavior -int 0

# Ask to keep changes when closing documents (Default is usually true anyway)
defaults write -g NSCloseAlwaysConfirmsChanges -bool true

# Don't default to saving new documents to iCloud Drive
defaults write -g NSDocumentSaveNewDocumentsToCloud -bool false

# Disable App Nap system-wide (Can improve responsiveness for background apps, may use more energy)
defaults write -g NSAppSleepDisabled -bool true

# Disable automatic termination of inactive apps (Similar to App Nap effect)
defaults write -g NSDisableAutomaticTermination -bool true

# Show fast user switching menu as: Icon (2), Full Name (1), Account Name (0)
defaults write -g userMenuExtraStyle -int 2

# Prefer tabs when opening documents: always, fullscreen, manual
defaults write -g AppleWindowTabbingMode -string "always"

# Finder: show all filename extensions (Also set later specifically for Finder)
defaults write -g AppleShowAllExtensions -bool true

# Disable the over-the-top focus ring animation
defaults write -g NSUseAnimatedFocusRing -bool false

# Adjust toolbar title rollover delay (Time before title appears on hover)
defaults write -g NSToolbarTitleViewRolloverDelay -float 0

# ==============================================
# Audio and sound effects
# ==============================================
echo "Setting Sound preferences..."

# Disable the startup chime (Requires sudo)
sudo nvram SystemAudioVolume="%00" || echo "WARN: Failed to set SystemAudioVolume (requires sudo/SIP config?)"

# Enable feedback sound when changing volume
defaults write -g com.apple.sound.beep.feedback -bool true

# Disable flashing the screen when an alert sound occurs (Accessibility)
defaults write -g com.apple.sound.beep.flash -bool false

# Alert volume (0.0 to 1.0) - 0.6065... is approx 50% on the slider scale
defaults write -g com.apple.sound.beep.volume -float 0.6065307

# Disable user interface sound effects (e.g., emptying trash)
defaults write -g com.apple.sound.uiaudio.enabled -bool false

# ==============================================
# Desktop & Screen Saver
# ==============================================
echo "Setting Desktop & Screen Saver preferences..."

# Require password immediately after sleep or screen saver begins
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0 # 0 seconds delay

# Hot corners
# Possible values: 0=no-op, 2=Mission Control, 3=Application Windows, 4=Desktop, 5=Start screen saver, 6=Disable screen saver, 7=Dashboard(obsolete), 10=Put display to sleep, 11=Launchpad, 12=Notification Center, 13=Lock Screen
# Modifiers: 0=none, 1048576=Shift, 131072=Control, 262144=Option, 524288=Command
# Example: Bottom left -> Start Screen Saver
defaults write com.apple.dock "wvous-bl-corner" -int 5
defaults write com.apple.dock "wvous-bl-modifier" -int 0
# Example: Top right -> Desktop
# defaults write com.apple.dock "wvous-tr-corner" -int 4
# defaults write com.apple.dock "wvous-tr-modifier" -int 0

# ==============================================
# Screen capture
# ==============================================
echo "Setting Screen Capture preferences..."

# Ensure screenshots directory exists
SCREENSHOTS_DIR="${HOME}/Downloads/ScreenShots"
mkdir -p "${SCREENSHOTS_DIR}"

# Save screenshots to the specified directory
defaults write com.apple.screencapture location -string "${SCREENSHOTS_DIR}"

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"

# Disable shadow in screenshots (for window captures)
defaults write com.apple.screencapture disable-shadow -bool true

# ==============================================
# Display Settings
# ==============================================
echo "Setting Display preferences..."

# Enable subpixel font rendering on non-Apple LCDs (May improve text clarity)
# Level 1: Light, 2: Medium, 3: Strong
defaults write -g AppleFontSmoothing -int 1

# Enable HiDPI display modes (requires restart) - Useful for non-Apple 4K+ displays
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

# ==============================================
# Photos / Image Capture
# ==============================================
echo "Setting Photos/Image Capture preferences..."

# Prevent Photos from opening automatically when devices are plugged in
defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

# ==============================================
# Mouse and trackpad
# ==============================================
echo "Setting Mouse and Trackpad preferences..."

# Enable tap to click for this user and for the login screen
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults write com.apple.AppleMultitouchTrackpad Clicking -bool true
defaults -currentHost write -g com.apple.mouse.tapBehavior -int 1
defaults write -g com.apple.mouse.tapBehavior -int 1

# Disable "natural" scroll direction (content moves opposite to finger movement)
defaults write -g com.apple.swipescrolldirection -bool false

# Enable swipe between pages with two fingers
defaults write -g AppleEnableSwipeNavigateWithScrolls -bool true

# Enable secondary click with two fingers
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
defaults write com.apple.AppleMultitouchTrackpad TrackpadRightClick -bool true
defaults -currentHost write -g com.apple.trackpad.trackpadCornerClickBehavior -int 0 # Ensure corner click is off
defaults -currentHost write -g com.apple.trackpad.enableSecondaryClick -bool true

# Disable three finger drag (can interfere with other gestures if enabled)
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerDrag -bool false
defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerDrag -bool false

# Keep trackpad enabled when external mouse is connected
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad USBMouseStopsTrackpad -int 0

# ==============================================
# Accessibility (No sudo needed for these user prefs)
# ==============================================
echo "Setting Accessibility preferences..."

# Reduce motion (disable animations like Mission Control zoom, full screen transitions)
defaults write com.apple.universalaccess reduceMotion -bool true

# Reduce transparency (increase contrast/legibility)
defaults write com.apple.universalaccess reduceTransparency -bool true

# Show window title icons (proxies)
defaults write com.apple.universalaccess showWindowTitlebarIcons -bool true

# Show toolbar button shapes (adds borders)
defaults write com.apple.universalaccess showToolbarButtonShapes -bool true

# ==============================================
# Applications Specific Settings
# ==============================================

# --- Finder ---
echo "Setting Finder preferences..."

# Set default view style: Column View ('clmv'), Icon View ('icnv'), List View ('Nlsv'), Gallery View ('glyv')
defaults write com.apple.finder FXPreferredViewStyle -string "clmv"
defaults write com.apple.finder SearchRecentsSavedViewStyle -string "clmv" # Use same view for search results

# Keep folders on top when sorting by name (in List/Icon views)
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# Show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Display full POSIX path as Finder window title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

# New Finder windows show Home folder ('PfHm'), Desktop ('PfDe'), Documents ('PfDo'), Computer ('PfCm'), Recents ('PfAF')
defaults write com.apple.finder NewWindowTarget -string "PfHm"
defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"

# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Show hidden files (files starting with .)
defaults write com.apple.finder AppleShowAllFiles -bool true

# Show the ~/Library folder (redundant with chflags earlier, but safe)
defaults write com.apple.finder ShowSidebarHardDrivesOnDesktop -bool false # Example: Hide HDDs on Desktop

# Allow text selection in Quick Look previews
defaults write com.apple.finder QLEnableTextSelection -bool true

# When performing a search, search the current folder by default ('SCcf') vs. This Mac ('SCev')
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Disable the warning before emptying the Trash
defaults write com.apple.finder WarnOnEmptyTrash -bool false

# Automatically open a new Finder window when a volume is mounted
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

# Use tabs instead of new windows for folders
defaults write com.apple.finder FinderSpawnTab -bool true

# Expand the following File Info panes by default: General, Open with, Sharing & Permissions
defaults write com.apple.finder FXInfoPanesExpanded -dict \
  General -bool true \
  MetaData -bool false \
  OpenWith -bool true \
  Privileges -bool true \
  Comments -bool false

# Finder: disable window animations and Get Info animations (Subtle speedup)
defaults write com.apple.finder DisableAllAnimations -bool true

# --- Icon View Settings (Example using PlistBuddy) ---
# These apply to Desktop and Finder windows in Icon View mode
echo "Setting Finder icon view preferences..."
FINDER_PLIST="${HOME}/Library/Preferences/com.apple.finder.plist"

# Enable snap-to-grid
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" "$FINDER_PLIST" || true
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" "$FINDER_PLIST" || true
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" "$FINDER_PLIST" || true

# Set grid spacing (points)
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 54" "$FINDER_PLIST" || true
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 54" "$FINDER_PLIST" || true
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 54" "$FINDER_PLIST" || true

# Set icon size (pixels)
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 64" "$FINDER_PLIST" || true
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 64" "$FINDER_PLIST" || true
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 64" "$FINDER_PLIST" || true

# Show item info (e.g., file count for folders) below icons
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" "$FINDER_PLIST" || true
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" "$FINDER_PLIST" || true
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" "$FINDER_PLIST" || true
# Ensure labels are below icons (default)
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:labelOnBottom true" "$FINDER_PLIST" || true

# --- Dock ---
echo "Setting Dock preferences..."

# Position on screen: left, bottom, right
defaults write com.apple.dock orientation -string "bottom"

# Set the icon size of Dock items (pixels)
defaults write com.apple.dock tilesize -int 35

# Magnification: Enable/Disable
defaults write com.apple.dock magnification -bool false
# defaults write com.apple.dock largesize -int 55 # Size when magnified

# Minimize windows into application icon (true) or into Dock (false)
defaults write com.apple.dock minimize-to-application -bool false

# Animation effect for minimizing: genie, scale, suck (less common now)
defaults write com.apple.dock mineffect -string "scale"

# Show indicator lights for open applications
defaults write com.apple.dock show-process-indicators -bool true

# Show recent applications in Dock
defaults write com.apple.dock show-recents -bool false

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

# Remove the auto-hiding Dock delay (makes it appear instantly)
defaults write com.apple.dock autohide-delay -float 0
# Remove the animation when hiding/showing the Dock
defaults write com.apple.dock autohide-time-modifier -float 0

# Make Dock icons of hidden applications translucent
defaults write com.apple.dock showhidden -bool true # Set to true for translucency

# Animate opening applications
defaults write com.apple.dock launchanim -bool true

# Disable bouncing Dock icons on launch or alert
defaults write com.apple.dock no-bouncing -bool true

# --- Mission Control ---
echo "Setting Mission Control preferences..."

# Speed up Mission Control animations (lower is faster)
defaults write com.apple.dock expose-animation-duration -float 0.1

# Donât group windows by application in Mission Control (old ExposÃ© behavior)
defaults write com.apple.dock expose-group-by-app -bool false

# Donât automatically rearrange Spaces based on most recent use
defaults write com.apple.dock mru-spaces -bool false

# Disable the multi-display swoosh animation when switching spaces
defaults write com.apple.dock workspaces-swoosh-animation-off -bool true # Corrected: true disables it

# ==============================================
# Final Steps
# ==============================================

# Apply changes by restarting affected applications
killallApps

exit 0
