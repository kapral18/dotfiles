#!/usr/bin/env bash

set -euo pipefail

# Ensure eget packages listed in the default file are installed
# {{ include "readonly_dot_default-eget-packages.tmpl" | sha256sum }}

EGET_PACKAGES_TEMPLATE={{ joinPath .chezmoi.sourceDir "readonly_dot_default-eget-packages.tmpl" | quote }}
BIN_DIR="${HOME}/.local/bin"

if [[ ! -f "$EGET_PACKAGES_TEMPLATE" ]]; then
  echo "Error: default-eget-packages template not found at $EGET_PACKAGES_TEMPLATE"
  exit 1
fi

if ! command -v chezmoi >/dev/null 2>&1; then
  echo "Error: chezmoi CLI not available"
  exit 1
fi

if ! command -v eget >/dev/null 2>&1; then
  echo "eget not found"
  exit 1
fi

if [[ -z "${EGET_GITHUB_TOKEN:-}" && -z "${GITHUB_TOKEN:-}" ]]; then
  echo "Note: No GitHub token detected for eget. Set EGET_GITHUB_TOKEN (or GITHUB_TOKEN) to avoid rate limits."
fi

mkdir -p "$BIN_DIR"

if ! mapfile -t lines < <(chezmoi execute-template < "$EGET_PACKAGES_TEMPLATE"); then
  echo "Error: Failed to render default-eget-packages template"
  exit 1
fi

install_eget_target() {
  local raw_line="$1"

  local trimmed_line cleaned_line
  trimmed_line=$(printf '%s' "$raw_line" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
  [[ -z "$trimmed_line" || "$trimmed_line" =~ ^# ]] && return 0

  cleaned_line=$(printf '%s' "$trimmed_line" | sed 's/[[:space:]]*#.*$//')
  cleaned_line=$(printf '%s' "$cleaned_line" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
  [[ -z "$cleaned_line" ]] && return 0

  local line_args=()
  # shellcheck disable=SC2206
  line_args=( $cleaned_line )

  if (( ${#line_args[@]} < 2 )); then
    echo "Error: Expected 'binary-name owner/repo [flags]' but got: $cleaned_line"
    return 1
  fi

  local binary_name="${line_args[0]}"
  local target="${line_args[1]}"

  if [[ -z "$target" ]]; then
    echo "Error: Missing eget target for $binary_name"
    return 1
  fi

  echo "Processing eget target: $binary_name -> $target"

  local cmd=("eget" "--upgrade-only" "$target")

  if [[ " ${line_args[*]} " != *" --to "* ]]; then
    cmd+=("--to" "$BIN_DIR")
  fi

  if (( ${#line_args[@]} > 2 )); then
    cmd+=("${line_args[@]:2}")
  fi

  if ! EGET_BIN="$BIN_DIR" "${cmd[@]}"; then
    local exit_code=$?
    echo "Error: Failed to install eget target: $binary_name"
    case $exit_code in
      22)
        echo "GitHub API rate limit hit. Consider setting EGET_GITHUB_TOKEN."
        ;;
    esac
    return 1
  fi

  return 0
}

status=0
for line in "${lines[@]}"; do
  if ! install_eget_target "$line"; then
    status=1
  fi
done

if [[ $status -ne 0 ]]; then
  echo "Completed with some errors while installing eget packages"
  exit $status
fi

echo "All eget packages processed successfully"
