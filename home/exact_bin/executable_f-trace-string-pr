#!/usr/bin/env bash
# Description: Locate a PR that introduced a matching string and open it in the browser.

set -euo pipefail

script_name="${0##*/}"
usage="Usage: $script_name <regex> <search_path>"

if [ "$#" -ne 2 ]; then
  echo "$script_name: invalid arguments" >&2
  echo "$usage" >&2
  exit 1
fi

regex="$1"
search_path="$2"

require_cmd() {
  if ! command -v "$1" >/dev/null 2>&1; then
    echo "$script_name: required command not found: $1" >&2
    exit 1
  fi
}

for cmd in git fzf gh parallel; do
  require_cmd "$cmd"
done

if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  echo "$script_name: not inside a git repository" >&2
  exit 1
fi

if ! git ls-files -- "$search_path" | LC_ALL=C grep -q .; then
  echo "$script_name: no tracked files found under '$search_path'" >&2
  exit 1
fi

determine_default_jobs() {
  local cores

  if command -v sysctl >/dev/null 2>&1; then
    cores="$(sysctl -n hw.physicalcpu 2>/dev/null || echo "")"
  fi

  if [ -z "${cores:-}" ] && command -v nproc >/dev/null 2>&1; then
    cores="$(nproc 2>/dev/null || echo "")"
  fi

  if [ -z "${cores:-}" ] && command -v getconf >/dev/null 2>&1; then
    cores="$(getconf _NPROCESSORS_ONLN 2>/dev/null || echo "")"
  fi

  if ! [[ "${cores:-}" =~ ^[0-9]+$ ]] || [ "${cores:-0}" -le 0 ]; then
    cores=1
  fi

  echo $((cores * 2))
}

if [ -z "${F_TRACE_STRING_PR_JOBS:-}" ]; then
  max_jobs="$(determine_default_jobs)"
else
  max_jobs="$F_TRACE_STRING_PR_JOBS"
fi

if ! [[ "$max_jobs" =~ ^[0-9]+$ ]] || [ "$max_jobs" -le 0 ]; then
  echo "$script_name: invalid F_TRACE_STRING_PR_JOBS value '$max_jobs'; expected positive integer" >&2
  exit 1
fi

temp_fifo="$(mktemp -u)"
mkfifo "$temp_fifo"
trap 'rm -f "$temp_fifo"' EXIT INT TERM

(
  export TRACE_REGEX="$regex"
  
  git ls-files -z -- "$search_path" |
    parallel -0 -j"$max_jobs" --line-buffer \
      'git -c log.showSignature=false log --oneline --follow -G "$TRACE_REGEX" -- {}' |
    awk '!seen[$0]++ { print; fflush() }' > "$temp_fifo"
) &

search_pid=$!

set +e
selection="$(fzf --info=inline-right --header="Searching for '$regex' in $search_path..." --header-first < "$temp_fifo")"
fzf_status=$?
set -e

wait "$search_pid" 2>/dev/null || true

if [ "$fzf_status" -ne 0 ] || [ -z "$selection" ]; then
  exit 0
fi

if [[ "$selection" =~ \(\#([0-9]+)\)$ ]]; then
  gh pr view -w "${BASH_REMATCH[1]}"
else
  echo "$script_name: selected commit does not reference a PR number:" >&2
  echo "$selection" >&2
  exit 1
fi
