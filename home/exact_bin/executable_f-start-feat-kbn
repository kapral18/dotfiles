#!/usr/bin/env bash

set -euo pipefail

TRIGGER_STRING="succ kbn/es setup complete"
LOGFILE="/tmp/es-feat.log"

# Check if first argument is -E flag or data folder
if [[ $# -gt 0 && "$1" == "-E" ]]; then
  # First argument is -E, use default data folder
  ES_DATA_FOLDER="feat-cluster"
else
  # First argument is data folder (or no arguments)
  ES_DATA_FOLDER=${1:-"feat-cluster"}
  shift || true # Remove first argument if it exists
fi

ES_DATA_PATH="$HOME/work/kibana/es_data/$ES_DATA_FOLDER"

# Build additional ES flags from remaining arguments
ES_FLAGS=""

# Handle -E key=value format
while [[ $# -gt 0 ]]; do
  if [[ "$1" == "-E" ]]; then
    if [[ $# -gt 1 ]]; then
      ES_FLAGS="$ES_FLAGS -E $2"
      shift 2
    else
      echo "Error: -E flag requires a value" >&2
      exit 1
    fi
  else
    echo "Error: Additional arguments must be in -E key=value format" >&2
    exit 1
  fi
done

# Capture current tmux session and window info
TMUX_SESSION=$(tmux display-message -p '#S')
TMUX_WINDOW=$(tmux display-message -p '#I')
TMUX_CURRENT_PANE=$(tmux display-message -p '#{pane_id}')
TMUX_CURRENT_INDEX=$(tmux display-message -p '#{pane_index}')
TMUX_TARGET_PANE=$(tmux list-panes -F '#{pane_index} #{pane_id}' | awk -v current="$TMUX_CURRENT_INDEX" '
  $1 > current {
    if (target == "" || $1 < best) {
      target = $2
      best = $1
    }
  }
  END {
    if (target != "") {
      print target
    }
  }
')

if [[ -z "${TMUX_TARGET_PANE:-}" ]]; then
  TMUX_TARGET_PANE=$(tmux list-panes -F '#{pane_index} #{pane_id}' | awk -v current="$TMUX_CURRENT_INDEX" '
    $1 != current {
      print $2
      exit
    }
  ')
fi

if [[ -z "${TMUX_TARGET_PANE:-}" ]]; then
  TMUX_TARGET_PANE="$TMUX_CURRENT_PANE"
fi

yarn kbn bootstrap

(
  tail -n 0 -F "$LOGFILE" | while read -r line; do
    if [[ "$line" == *"$TRIGGER_STRING"* ]]; then
      tmux send-keys -t "$TMUX_TARGET_PANE" "yarn start --host kibana-feat.local --no-base-path" C-m
      break
    fi
  done
) &

yarn es snapshot -E discovery.type=single-node -E path.data="$ES_DATA_PATH"${ES_FLAGS} 2>&1 | tee "$LOGFILE"
